import socket

# -------------------- SERVER SETUP --------------------
# Create socket object
server = socket.socket()

# üß† ENTER YOUR SERVER MACHINE IP BELOW:
# Example: '192.168.1.5'  ‚Üê Replace with your computer's IPv4 address
# Or use 'localhost' if running both server and client on same PC
server_ip = input("Enter your Server IP (e.g., 192.168.1.5 or 'localhost'): ")

# Bind the server to your IP and a port number (e.g., 9999)
server.bind((server_ip, 9999))

# Start listening for incoming connections
server.listen(1)
print(f"‚úÖ Server started on {server_ip}:9999 ‚Äî waiting for client connection...")

# Accept a connection from the client
conn, addr = server.accept()
print("üîó Connected with client at:", addr)

# -------------------- COMMUNICATION LOOP --------------------
# Half duplex: Only one side communicates at a time.
# The client sends a message first; the server responds.
while True:
    # Receive message from client
    msg = conn.recv(1024).decode()
    print("Client:", msg)

    if msg.lower() == "exit":
        print("‚ùå Client ended the chat.")
        break

    # Server sends reply
    reply = input("You: ")
    conn.send(reply.encode())

    if reply.lower() == "exit":
        print("‚úÖ Chat closed by server.")
        break

# Close connection
conn.close()


# -------------------- UBUNTU EXECUTION STEPS --------------------
# 1Ô∏è‚É£ Open the Terminal in Ubuntu.
#
# 2Ô∏è‚É£ Verify Python installation:
#     python3 --version
#    If not installed, install it using:
#     sudo apt update && sudo apt install python3
#
# 3Ô∏è‚É£ Save this file as `server_halfduplex.py`.
#
# 4Ô∏è‚É£ Find your local IP address (if connecting from another machine):
#     hostname -I
#    Example output: 192.168.1.5
#
# 5Ô∏è‚É£ Run the server:
#     python3 server_halfduplex.py
#
# 6Ô∏è‚É£ When prompted, enter your server IP:
#     - Use `localhost` if the client is on the same machine.
#     - Use your IPv4 (e.g., 192.168.1.5) if connecting from another PC.
#
# 7Ô∏è‚É£ The server will start and display:
#     ‚úÖ Server started on <IP>:9999 ‚Äî waiting for client connection...
#
# 8Ô∏è‚É£ Now, run the **client** program on another terminal or another computer.
#     Once the client connects, you‚Äôll see:
#     üîó Connected with client at: ('192.168.1.x', <port>)
#
# 9Ô∏è‚É£ Communication process (Half-Duplex mode):
#     - The client sends a message first.
#     - The server receives it and then replies.
#     - Only one side talks at a time.
#
# üîü To end the chat:
#     - Type `exit` from either the server or client side.
#
# ‚úÖ Notes:
#   - Make sure both server and client are using the same port (9999).
#   - If using different machines, ensure both are on the same Wi-Fi network.
#   - If you get a "Connection refused" error, check your IP and firewall settings.
